/**
 * @file emg_weights.h
 * @brief Pre-trained CNN weights for EMG classification
 * @author Dual-MCU EMG System
 * @date 2025
 * @note This file would be generated by ai8x-training framework
 */

#ifndef EMG_WEIGHTS_H
#define EMG_WEIGHTS_H

#ifdef __cplusplus
extern "C" {
#endif

/* Includes ------------------------------------------------------------------*/
#include <stdint.h>

/* Weight Data */
extern const uint32_t emg_cnn_weights[];
extern const uint32_t emg_cnn_bias[];

/* Weight Data Sizes */
#define EMG_CNN_WEIGHT_DATA_SIZE    8192
#define EMG_CNN_BIAS_DATA_SIZE      256

/* Model Information */
#define EMG_CNN_MODEL_VERSION       "1.0.0"
#define EMG_CNN_MODEL_DATE          "2025-01-01"
#define EMG_CNN_QUANTIZATION_BITS   8

/* Network Architecture */
#define EMG_CNN_LAYER_1_CHANNELS    32
#define EMG_CNN_LAYER_2_CHANNELS    64
#define EMG_CNN_LAYER_3_CHANNELS    128
#define EMG_CNN_LAYER_4_CHANNELS    128
#define EMG_CNN_LAYER_5_CHANNELS    64
#define EMG_CNN_LAYER_6_CHANNELS    8

/* Placeholder weights - would be replaced with actual trained weights */
const uint32_t emg_cnn_weights[EMG_CNN_WEIGHT_DATA_SIZE] = {
    /* Layer 1 weights */
    0x12345678, 0x9ABCDEF0, 0x13579BDF, 0x2468ACE0,
    0x11223344, 0x55667788, 0x99AABBCC, 0xDDEEFF00,
    0x01234567, 0x89ABCDEF, 0x02468ACE, 0x13579BDF,
    0x11111111, 0x22222222, 0x33333333, 0x44444444,
    
    /* Layer 2 weights */
    0x55555555, 0x66666666, 0x77777777, 0x88888888,
    0x99999999, 0xAAAAAAAA, 0xBBBBBBBB, 0xCCCCCCCC,
    0xDDDDDDDD, 0xEEEEEEEE, 0xFFFFFFFF, 0x00000000,
    0x12121212, 0x34343434, 0x56565656, 0x78787878,
    
    /* Layer 3 weights */
    0x9A9A9A9A, 0xBCBCBCBC, 0xDEDEDEDE, 0xF0F0F0F0,
    0x13131313, 0x57575757, 0x9B9B9B9B, 0xDFDFDFDF,
    0x24242424, 0x68686868, 0xACACACAC, 0xE0E0E0E0,
    0x11111111, 0x22222222, 0x33333333, 0x44444444,
    
    /* Additional weights would continue here... */
    /* For brevity, filling with pattern data */
};

const uint32_t emg_cnn_bias[EMG_CNN_BIAS_DATA_SIZE] = {
    /* Layer 1 bias */
    0x00000000, 0x00000000, 0x00000000, 0x00000000,
    0x00000000, 0x00000000, 0x00000000, 0x00000000,
    
    /* Layer 2 bias */
    0x00000000, 0x00000000, 0x00000000, 0x00000000,
    0x00000000, 0x00000000, 0x00000000, 0x00000000,
    
    /* Layer 3 bias */
    0x00000000, 0x00000000, 0x00000000, 0x00000000,
    0x00000000, 0x00000000, 0x00000000, 0x00000000,
    
    /* Additional bias values would continue here... */
    /* For brevity, filling with zeros */
};

/* Model Configuration */
typedef struct {
    const char* version;
    const char* date;
    uint8_t quantization_bits;
    uint16_t input_size;
    uint16_t output_size;
    uint16_t layer_count;
    uint32_t weight_count;
    uint32_t bias_count;
} EMG_CNN_ModelInfoTypeDef;

static const EMG_CNN_ModelInfoTypeDef emg_model_info = {
    .version = EMG_CNN_MODEL_VERSION,
    .date = EMG_CNN_MODEL_DATE,
    .quantization_bits = EMG_CNN_QUANTIZATION_BITS,
    .input_size = 72,
    .output_size = 8,
    .layer_count = 6,
    .weight_count = EMG_CNN_WEIGHT_DATA_SIZE,
    .bias_count = EMG_CNN_BIAS_DATA_SIZE
};

/* Function to get model information */
static inline const EMG_CNN_ModelInfoTypeDef* EMG_CNN_GetModelInfo(void)
{
    return &emg_model_info;
}

#ifdef __cplusplus
}
#endif

#endif /* EMG_WEIGHTS_H */